数组
    数组是java提供的引用数据类型
    数组具有相同数据类型的一组数据的集合
    数组根据数据复杂程度分为一维、二维和多维数组
    基本数据类型的扩展, 数组的内存空间地址是连续的
    数组属于引用类型, 它的空间分配在堆里

一维数组的使用
    数组定义
        声明
            数据类型[] 数组名;
                或
            数据类型 数组名[];

        实例化(分配内存)
            数组名 = new 数据类型[数组元素个数];

        声明加实例化
            数据类型 数组名[] = new 数据类型[数组元素个数];
                或
            数据类型[] 数组名 = new 数据类型[数组元素个数];
                保证数组所有元素的值为0

        静态初始化(声明、实例化和设置初始值)
            数据类型 数组名[] = new 数据类型[] {值1, 值2, ...};
                或
            数据类型 数组名[] = {值1, 值2, ...};
                只能在实例化时使用大括号赋值, 之后只能一个元素一个元素赋值

    数组赋值
        数组名[下标] = 新值;

    数组访问
        数组名[下标];
            下标从0开始计算, 不能越界
            下标可以引用其它变量的值

        for (int i = 0; i < 数组名.length; i++) {
            数组名[i]...
        }

        for (int i : 数组名) {      //将数组每个元素赋值给i
            i..
        }

    数组的长度
        数组名.length

    数组作为函数参数
        形参: 函数名(数据类型[] 数组名)
            或
        形参: 函数名(数据类型 数组名[])
        实参: 函数名(数组名)

        数组为引用类型，所以此时实参传递的是数组的引用
        在函数内可以修改实参传递数组的值

    数组作为函数返回值
        数据类型[] 函数名(...) {
            return new 数据类型[10];
        }

    数据的复制
        int a[] = {1, 2, 3, 4, 5};
        int b[] = a;                //浅拷贝, 数组名代表的一个地址
            a和b数组的空间为同一个空间，互相改变互相影响

        深拷贝 将数组的数据复制一份
        int b[] = new int[a.length];

        System.arraycopy(a, 0, b, 0, b.length);

-------------------------------------------------------------------------------
二维数组/多维数组
    二维数组只是比一维数组多一个中括号
    二维数组代表包含多个一维数组，每个一维数组的大小可以不一样
    三维数组代表包含多个二维数组，每个二维数组的大小可以不一样
    ...
    int a[][] = new int[5][4];
        定义有5个一维数组，每个一维数组的元素为4个的二维数组

    int a[][] = new int[5][];
        定义有5个一维数组的二维数组
        a[0] = new int[10];
        a[1] = new int[5];
        a[2] = new int[3];
        a[3] = new int[15];
        a[4] = new int[100];

    int a[][] = {{1, 2, 3}, {1, 2, 3, 4, 5}, {1, 2, 3, 4}};

===============================================================================
作业:
    整型数组的操作封装函数
        对数组随机赋值
        接受用户输入对数组赋值
        对数组进行反转
        对数组求最大值和最小值
        对数组进行循环左移和右移
                1 2 3 4 5
        循环左移: 2 3 4 5 1
        循环右移: 5 1 2 3 4

        对数组进行升序/降序
        输出数组

    猜拳小游戏
    从一个数组中找出不重复的第二大数(不考虑负数 不允许排序 不允许使用临时数组)
        9 10 6 7 4 6 10 7 = 4

    M个人围成一圈报数, 报到N的人退出，输出退出顺序

    3 5 7 9能组合多少不能被5整除的4位数，位数不能相同
    对已经存在有序的数组插入一个数据并且保证有序(动态数组)

    以字符形式输出浮点数(实现printf("%f")功能)

    实现cal命令功能(一个月/一整年)
    弹球程序 -> 兵乓球游戏 -> 贪吃蛇 -> 俄罗斯方块

