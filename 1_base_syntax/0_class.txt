计算机
    冯×诺伊曼:   存储-> 运行
    硬件和软件组成
    硬件组成: 主机(CPU + 存储器) + I/O设备(键盘/显示器...)
        CPU: 运算器 + 控制器 + 寄存器(PC/SP/LR)
        存储器: 随机动态存储器(内存) 随机静态存储器(硬盘)

编程语言
    机器语言(数字信号 0和1来表示)
    低级语言(汇编语言 方便记忆)
    高级语言(跨平台)
        编译型: C/C++/C#/GO
        解析型: Shell/PHP/JavaScript/Python/Ruby/SQL/Java
                HTML/CSS

程序的概念
    程序规定计算机执行哪些动作和动作执行顺序
    程序 = 数据结构 + 算法
    数据结构: 数据的存储形式(解决问题过程产生的数据如何存储)
    算法: 解决问题的步骤和使用什么方法来解决
    程序 -> 可执行文件(二进制代码)
    程序文件分段组成: BSS DATA RODATA CODE
    程序运行流程:
        将程序文件内容加载到内存(进程->内存->虚拟内存地址)
        每个程序运行起来都会有独立内存空间(32: 0-4G, 64: 0-2^64-1)
        虚拟内存空间: 栈 堆 (BSS DATA RODATA CODE)
        栈存储函数中变量空间
        堆为用户自定义空间

存储单位及换算
    最小单元为位(即二进制的位)
    8个位组成一个字节(文件最小单位)
    1024个字节组成一个KB(千字节)
    1024个KB组成一个MB(兆字节)
    1024个MB组成一个GB(吉/千兆字节)
    1024个GB组成一个TB(太/万亿字节)
    1024个TB组成一个PB(拍/千万亿字节)
    1024个PB组成一个EB(艾/百亿亿字节)
    1024个EB组成一个ZB(泽/十万亿亿字节)
    1024个ZB组成一个YB(尧/一亿亿亿字节)

进制转换
    数字有二进制 八进制 十进制 十六进制的表示形式
    二进制: 0101110 10 = 2
    八进制: 0456    10 = 8
    十进制: 678
    十六进制: 0xaf  (a -> 10, b -> 11, c -> 12...) 0x10 = 16

    十进制转其它进制(辗转相除法)
        除进制基数,结果再除进制基数，直到结果为0,  从下向上取余数即是对应结果
        8转二进制:
            8/2 4 0
            4/2 2 0
            2/2 1 0
            1/2 0 1
            结果: 1000

    其它进制转十进制
        每个位数的数乘进制基数对应位数减一次方(n - 1), 其和为十进制
        10011: 1*2^4+1*2^1+1*2^0 = 19
        0100:  1*8^2 = 64

    十六进制转二进制
        十六进制一个位代表二进制四个位
        0x13 => 0001 0011

    八进制转二进制
        八进制一个位代表二进制三个位
        013 => 1011

原码、反码、补码
    计算机使用二进制来表示数字
    计算机对数字的正负表示为有符号和无符号
        有符号代表负数，无符号代表正数
        计算机使用存储最高位来描述符号位(1代表有符号，0代表无符号)
    计算机存储数据按字节存储，如果运算超过字节存储范围会丢弃进位
    正数的原码、反码、补码都是相等,即二进制本身
    原码、反码、补码的概念应用在表示负数时才使用

    原码: 数字的二进制表示
        5   0000 0101
        -5  1000 0101

    反码: 对数字原码除符号位按位取反
        5   0000 0101
        -5  1111 1010

    补码: 对数字的反码加1
        5   0000 0101
        -5  1111 1011

    为什么有补码的概念?
        原因是计算机没有减法运算的操作, 减法运算使用补码来完成
        运算规则:
            0 + 0 = 0
            1 + 0 = 1
            0 + 1 = 1
            1 + 1 = 10

        例: 2 - 1 (2 加 -1的补码)
            0000 0010
            1111 1111

                0000 0001
        例: 1 - 2 (1 加 -2的补码)
            0000 0001
            1111 1110

            1111 1111
                换算为原码: 1000 0001 = -1

-------------------------------------------------------------------------------
Java历史
    1990年， Sun公司的James*Gosling等人研究解决智能家居连网问题(Green项目)
            基于C++研发新语言Oak
    1995年, Oak改名为Java
    2009年, 甲骨文以74亿美元收购Sun公司

Java特点
    最大特点为跨平台(一次编译，到处运行)
    强大联网功能(分布式)
    基于C++语法并且去掉一些复杂的东西(指针 多重继承)
    提供自动内存管理(解决因为没有释放内存或分配而产生的问题)
    较高安全性
    面向对象

Java平台架构与版本
    Java平台由Java虚拟机和Java应用编程接口组成
    java平台分为三个体系:
        Java SE(j2se)       标准版(桌面应用)
        Java EE(j2ee)       企业版(增强版 Web)
        Java ME(j2me)       微型版(嵌入式)

Java虚拟机(JVM) {
    为了实现一次编译，到处运行的宏伟目标的产物
    Java程序编译不是编译成可执行文件，而是字节码文件(通用二进制文件)
    给Java程序提供运行环境, 解析字节码

    JRE(Java的运行环境) = JVM + 核心类库

    Java源文件(*.java) -> Java字节码(*.class) -> JVM -> 操作系统
}

JDK {
    JDK: Java开发环境(稳定版为1.8/最新版1.9)
    官网下载:
        http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html
        jdk-8u121-linux-x64.tar.gz
        默认下载到用户家目录->下载(Downloads)

    linux mint安装JDK:
        tar -xf jdk-8u121-linux-x64.tar.gz -C /opt
            解压指定路径(任意位置)

        设置环境变量(将设置变量操作写终端配置文件):
            ~/.bashrc 或 ~/.profile
            export JAVA_HOME=/opt/jdk1.8.0_121
            export PATH=$JAVA_HOME/bin:$PATH

            CLASSPATH环境变量(指定字节码文件位置)
                1.5版以上不需要设置, Java自动查找
                export CLASSPATH=.;/lib/tool.jar

        测试
            java -version   查看版本是否为自己安装的版本
            which java      查看路径是否为自己安装的路径

        编译
            javac hello.java    生成class文件(字节码文件)
                -classpath  指定依赖的class路径在哪
                在当前目录下生成class文件

        运行
            java hello
                运行当前目录下必须有hello.class文件
                -classpath 指定class文件在哪

        码云地址:
            http://git.oschina.net/iprintf/java-701

===============================================================================
Java基本语法
    研究入口
    变量 -> 数据类型 -> 操作符
    流程控制
    函数
    数组
    字符串

    文件名和主类名必须一致
    // 单行注释
    /*...*/ 多行注释 多行注释不能嵌套
    每条语句后必须以分号结束

数据类型
    基本数据类型(整型 浮点型 字符型 布尔型)
        整型: byte(1) short(2) int(4) long(8)
            书写不支持二进制
            数字后加l/L代表长整型

        浮点型: float(4) double(8)
            在小点数数字后写f/F代表此数为单精度的浮点型
            在小点数数字后写d/D代表此数为双精度的浮点型(不加也是双精度)

        字符型: char(2)
            单引号引起来的内容为字符
            双引号引起来的内容为字符串
            支持unicode编码

        布尔型: boolean(1) true/false

    引用数据类型(类 接口 数组)

    数据类型可以互相转换
        隐式类型转换
        强制类型转换: (类型名)变量名

ASCII:
    A       65
    a       97
    0       48

变量
    未初始化的变量不可以使用(会报错)

    定义
        数据类型 变量名;
        数据类型 变量名 = 变量值;
        数据类型 变量名 = 变量值, 变量名2...;

    赋值
        变量名 = 变量值;

    访问
        直接写即可变量名

运算符
    算术运算符
        + - * / %
    比较运算符
        > >= == != < <=
    逻辑运算符
        && || !

    赋值运算符  =
    分隔运算符    ,
    优化级运算符 ()
    扩展赋值运算符
        += -= *= /= %= ^= &= |= >>= <<= >>>=
        ++ --
        前加: 先运算后赋值
        后加: 先赋值后运算

    条件运算符 ? :
        条件表达式 ? 成立执行代码 : 不成立执行代码;
        应用在给第三个变量赋值时

    位运算符 (直接操作内存)
        ^ & | ~ >> << >>>

流程控制
    分支(选择)
        if
            if (条件表达式1) {
                条件表达式1成功执行的代码
                ...
            } else if (条件表达式2) {
                条件表达式2成功执行的代码
                ...
            } else {
                以上条件表达式都不成立执行的代码
                ...
            }

        switch
    循环
        for
            for (i = 0; i < 10; i++) {
                循环体
                ...
            }
                i = 0; 第一段: 初始化段, 以逗号为分隔符可写多个表达式
                i < 10; 第二段: 条件段，条件成立执行循环体
                i++     第三段: 执行完循环体再执行的代码

        while
            while (条件表达式) {
                条件表达式成功执行循环代码
                ...
            }

        do..while

-------------------------------------------------------------------------------
作业:
    交换两个变量的值(二种方法)
    输入一个数字，将此数字的二进制位第4, 5, 7置1, 将第2, 6位置0, 输出置位后结果
        (从0开始计数)
    输出1 - 1/2 + 1/3 - 1/4 + 1/5 .... + 1/99 - 1/100的结果(0.69)
    把八进制的数转为十进制数(不允许printf转化)
    求两个数的最大公约数
    已知1900年一月一号是星期一，求今年有多少个黑色星期五(13号是星期五即是黑色星期五)
    张三从2000年1月1号开始过着三天打鱼两天晒网的日子，指定年月日求在打鱼还是晒网
    用一个循环输出等腰梯型(可指定顶和高)
    求1000以内的完数 (所有因子之和等于本身)
    求1000以内的水仙花数 (每个位数的立方之和等于本身)

